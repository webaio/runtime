server {
  listen       80 reuseport;
  server_name  webio.tracker;
  default_type 'application/json';
  root /usr/share/nginx/html;
  index /index.json;

  lua_transform_underscores_in_response_headers on;
  lua_need_request_body on;
  set $lua_request_id "";
  set $lua_request_content "{}";
  set $lua_request_headers "";
  set $lua_response_headers "";

  log_by_lua_block {
        ngx.var.lua_request_content = ngx.encode_base64(ngx.req.get_body_data())
        ngx.var.lua_request_headers = ngx.encode_base64(ngx.req.raw_header())
        ngx.var.lua_request_id = string.lower(uuid.getUUID())

        for response_header_name, response_header_value in pairs(ngx.resp.get_headers()) do
            ngx.var.lua_response_headers = ngx.var.lua_response_headers .. response_header_name .. ":" .. response_header_value .. "\r\n"
        end

        ngx.var.lua_response_headers = ngx.encode_base64(ngx.var.lua_response_headers)
  }

  location = / {
    aio threads;

    51D_match_single x-device PlatformName,PlatformVendor,PlatformVersion,BrowserName,BrowserVendor,BrowserVersion,HardwareName,HardwareModel,HardwareVendor,IsTablet,IsConsole,IsMobile,IsSmartPhone,IsSmartWatch,IsSmallScreen,IsEReader,IsTv,IsCrawler;

    access_by_lua_block {
        ngx.req.read_body();

        ngx.status = ngx.HTTP_NO_CONTENT;
        ngx.say("");
        ngx.eof();
    }
  }

  error_page  405     =200 $uri;
  error_page   500 502 503 504  /index.html;

  error_log /var/log/nginx/error.log error;
  access_log /var/log/nginx/access.log custom_log;
}