user www-data;
worker_processes auto;
pid /var/run/nginx.pid;

worker_rlimit_nofile 40000;

events {
  worker_connections  524288;
  multi_accept on;
  use epoll;
  accept_mutex off;
}

http {
  geoip_country  /usr/share/GeoIP/GeoIP/GeoIP.dat;
  geoip_city     /usr/share/GeoIP/GeoIP/GeoLiteCity.dat;
  client_body_buffer_size      10m;
  client_max_body_size         10m;
  client_header_buffer_size    1k;
  large_client_header_buffers  4 4k;
  output_buffers               1 32k;
  postpone_output              1460;
  client_header_timeout  3m;
  client_body_timeout    3m;
  send_timeout           3m;  
  client_body_in_single_buffer on;
  request_pool_size 1m;
  log_format custom_log '{"request":{"id" : "$lua_request_id","uri" : "$scheme:\/\/$host$request_uri", "method":"$request_method","headers":"$lua_request_headers","content":"$lua_request_content","date":"$time_iso8601","remote_addr":"$remote_addr","x_forwarded_for":"$http_x_forwarded_for"},"response":{"status":"$status", "headers":"$lua_response_headers"}, "localization" : {"country" : "$geoip_city_country_code3", "region" : "$geoip_region", "city" : "$geoip_city", "postal_code" : "$geoip_postal_code", "continent" : "$geoip_city_continent_code", "latitude" : "$geoip_latitude", "longitude" : "$geoip_longitude"}}';
  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 20;
  keepalive_requests 100000;
  types_hash_max_size 2048;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  access_log off;
  error_log off;
  gzip off;
  gzip_disable "msie6";
  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 1314000s;
  open_file_cache_min_uses 1000000;
  open_file_cache_errors on;
  open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;
  reset_timedout_connection on;

  init_by_lua_block {
    resty_random = require "resty.random"
    resty_string = require "resty.string"
    resty_cookie = require "resty.cookie"
    resty_client = require "resty.kafka.client"
    resty_producer = require "resty.kafka.producer"
    uuid = require "uuid.uuid4"

    kafka_broker_list = {
        { host = "100.0.0.205", port = 9092 },
    }

    kafka_topic = "eventor_webserver"
  }
}

daemon off;